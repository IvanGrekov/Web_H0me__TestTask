{"version":3,"sources":["api.js","CommentsContext.js","components/Form/Form.jsx","components/NewComment/NewComment.jsx","components/Loader/Loader.jsx","components/CommentItem/CommentItem.jsx","components/Pagination/DisabledNavButton.jsx","components/Pagination/UsualNavButton.jsx","components/Pagination/Pagination.jsx","components/CommentList/CommentList.jsx","App.jsx","index.jsx"],"names":["apiAddress","sendQuerry","options","searchParameter","fetch","then","response","json","catch","console","log","CommentsContext","React","createContext","updateData","pagesAmount","currentCommentList","currentPage","getData","Form","memo","useContext","useState","name","setName","text","setText","addComment","comment","queryOptions","method","body","JSON","stringify","headers","result","post","className","onSubmit","event","preventDefault","htmlFor","id","type","placeholder","required","value","onChange","target","rows","NewComment","Loader","CommentItem","item","textExpanding","setTextExpanding","overflow","length","classNames","onClick","DisabledNavButton","disabled","UsualNavButton","number","propTypes","PropTypes","isRequired","func","Pagination","callUsualButton","CommentList","map","App","setPagesAmount","setCurrentCommentList","setCurrentPage","pageNumber","data","last_page","current_page","useEffect","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f985892.chunk.js","sourcesContent":["const apiAddress = 'https://jordan.ashton.fashion/api/goods/30/comments';\n\nexport const sendQuerry = (options = {}, searchParameter) => (\n  fetch(\n    `${apiAddress}?page=${searchParameter}`,\n    options,\n  )\n    .then((response) => response.json())\n    .catch(console.log)\n);\n\nexport const post = (comment) => {\n  const queryOptions = {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return sendQuerry(queryOptions)\n    .then((result) => result);\n};\n","import React from 'react';\n\nexport const CommentsContext = React.createContext({\n  updateData: () => {},\n  pagesAmount: 1,\n  currentCommentList: [],\n  currentPage: 0,\n  getData: () => {},\n});\n","import React, { useState, useContext } from 'react';\nimport { CommentsContext } from '../../CommentsContext';\nimport { post } from '../../api';\nimport './Form.scss';\n\nexport const Form = React.memo(\n  () => {\n    const { updateData } = useContext(CommentsContext);\n\n    const [name, setName] = useState('');\n    const [text, setText] = useState('');\n\n    const addComment = () => {\n      const comment = {\n        name,\n        text,\n      };\n\n      setName('');\n      setText('');\n\n      post(comment)\n        .then(() => updateData());\n    };\n\n    return (\n      <form\n        className=\"new-comment__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addComment();\n        }}\n      >\n        <label htmlFor=\"name\" className=\"new-comment__label\">\n          <span className=\"new-comment__label-title\">\n            Enter the name\n          </span>\n\n          <input\n            id=\"name\"\n            className=\"new-comment__input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Author's name\"\n            required\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"text\" className=\"new-comment__label\">\n          <span className=\"new-comment__label-title\">\n            Enter the text\n          </span>\n\n          <textarea\n            id=\"text\"\n            className=\"new-comment__input new-comment__input--textarea\"\n            placeholder=\"Ð¡omment text\"\n            rows=\"5\"\n            required\n            value={text}\n            onChange={(event) => {\n              setText(event.target.value);\n            }}\n          />\n        </label>\n\n        <button\n          className=\"new-comment__submit\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  },\n);\n","import React from 'react';\nimport { Form } from '../Form/index';\nimport './NewComment.scss';\n\nexport const NewComment = React.memo(\n  () => (\n    <section className=\"new-comment app__content\">\n      <div className=\"new-comment__wrapper\">\n        <h2 className=\"new-comment__title\">\n          Add a new comment\n        </h2>\n\n        <Form />\n      </div>\n    </section>\n  ),\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = React.memo(\n  () => (\n    <div className=\"loader\">\n      <div className=\"loader__spinner\" />\n\n      <span className=\"loader__text\">\n        Loading data...\n      </span>\n    </div>\n  ),\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './CommentItem.scss';\n\nexport const CommentItem = React.memo(\n  ({ item }) => {\n    const [textExpanding, setTextExpanding] = useState(false);\n    const { name, text } = item;\n    const maxVisibleTextLength = 75;\n\n    let overflow = text.length > maxVisibleTextLength ? true : false;\n\n    if (text.length > 70) {\n      overflow = true;\n    }\n\n    return (\n      <li className=\"comment comment-list__item\">\n        <h3 className=\"comment__name\">\n          {name}\n        </h3>\n\n        <p\n          className={classNames(\n            'comment__text',\n            { 'comment__text--expand': textExpanding },\n          )}\n        >\n          {text}\n        </p>\n\n        <button\n          className={classNames(\n            'comment__show',\n            { 'comment__show--disabled': !overflow },\n          )}\n          onClick={() => setTextExpanding(!textExpanding)}\n          type=\"button\"\n        >\n          {textExpanding ? 'Hide full comment' : 'Show full comment'}\n        </button>\n      </li>\n    );\n  },\n);\n\nCommentItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nexport const DisabledNavButton = React.memo(\n  () => (\n    <li className=\"pagination__item\">\n      <button\n        className=\"pagination__link\"\n        type=\"button\"\n        disabled\n      >\n        ...\n      </button>\n    </li>\n  ),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const UsualNavButton = React.memo(\n  ({ number, currentPage, getData }) => (\n    <li className=\"pagination__item\">\n      <button\n        className={classNames(\n          'pagination__link',\n          { 'pagination__link--selected': currentPage === number },\n        )}\n        type=\"button\"\n        onClick={() => {\n          if (number !== currentPage) {\n            getData(number);\n          }\n        }}\n      >\n        {number}\n      </button>\n    </li>\n  ),\n);\n\nUsualNavButton.propTypes = {\n  number: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  getData: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { CommentsContext } from '../../CommentsContext';\nimport { DisabledNavButton } from './DisabledNavButton';\nimport { UsualNavButton } from './UsualNavButton';\nimport './Pagination.scss';\n\nexport const Pagination = React.memo(\n  () => {\n    const {\n      currentPage,\n      pagesAmount,\n      getData,\n    } = useContext(CommentsContext);\n\n    const maxPossibleLength = 7;\n\n    const callUsualButton = (number) => (\n      <UsualNavButton\n        number={number}\n        currentPage={currentPage}\n        getData={getData}\n      />\n    );\n\n    const renderButtons = () => {\n      if (pagesAmount === maxPossibleLength) {\n        return (\n          <>\n            {callUsualButton(2)}\n\n            {callUsualButton(3)}\n          </>\n        );\n      }\n\n      if (currentPage === 1) {\n        return (\n          <>\n            {callUsualButton(2)}\n\n            <DisabledNavButton />\n          </>\n        );\n      }\n\n      if (currentPage === 2) {\n        return (\n          <>\n            {callUsualButton(2)}\n\n            {callUsualButton(3)}\n\n            <DisabledNavButton />\n          </>\n        );\n      }\n\n      if (currentPage === 3) {\n        return (\n          <>\n            {callUsualButton(2)}\n\n            {callUsualButton(3)}\n\n            {callUsualButton(4)}\n\n            <DisabledNavButton />\n          </>\n        );\n      }\n\n      if (currentPage === pagesAmount) {\n        return (\n          <>\n            <DisabledNavButton />\n\n            {callUsualButton(pagesAmount - 1)}\n          </>\n        );\n      }\n\n      if (currentPage === (pagesAmount - 1)) {\n        return (\n          <>\n            <DisabledNavButton />\n\n            {callUsualButton(pagesAmount - 2)}\n\n            {callUsualButton(pagesAmount - 1)}\n          </>\n        );\n      }\n\n      if (currentPage === (pagesAmount - 2)) {\n        return (\n          <>\n            <DisabledNavButton />\n\n            {callUsualButton(pagesAmount - 3)}\n\n            {callUsualButton(pagesAmount - 2)}\n\n            {callUsualButton(pagesAmount - 1)}\n          </>\n        );\n      }\n\n      return (\n        <>\n          <DisabledNavButton />\n\n          {callUsualButton(currentPage - 1)}\n\n          {callUsualButton(currentPage)}\n\n          {callUsualButton(currentPage + 1)}\n\n          <DisabledNavButton />\n        </>\n      );\n    };\n\n    return (\n      <ul className=\"pagination\">\n        <li className=\"pagination__item\">\n          <button\n            className=\"pagination__link pagination__link--switcher\"\n            type=\"button\"\n            disabled={currentPage === 1}\n            onClick={() => {\n              getData(currentPage - 1);\n            }}\n          >\n            &lt;\n          </button>\n        </li>\n\n        {callUsualButton(1)}\n\n        {renderButtons()}\n\n        {callUsualButton(pagesAmount)}\n\n        <li className=\"pagination__item\">\n          <button\n            className=\"pagination__link pagination__link--switcher\"\n            type=\"button\"\n            disabled={currentPage === pagesAmount}\n            onClick={() => {\n              getData(currentPage + 1);\n            }}\n          >\n            &gt;\n          </button>\n        </li>\n      </ul>\n    );\n  },\n);\n","import React, { useContext } from 'react';\nimport { CommentsContext } from '../../CommentsContext';\nimport { Loader } from '../Loader';\nimport { CommentItem } from '../CommentItem';\nimport { Pagination } from '../Pagination';\n\nimport './CommentList.scss';\n\nexport const CommentList = React.memo(\n  () => {\n    const { currentCommentList } = useContext(CommentsContext);\n\n    return (\n      <div className=\"comment-list app__content\">\n        <h2 className=\"comment-list__title\">\n          Comments\n        </h2>\n\n        {currentCommentList.length === 0 ? (\n          <>\n            <Loader />\n          </>\n        ) : (\n          <>\n            <ul className=\"comment-list__content\">\n              {currentCommentList.map(({ id, name, text }) => (\n                <CommentItem item={{ name, text }} key={id} />\n              ))}\n            </ul>\n\n            <div className=\"comment-list__pagination\">\n              <Pagination />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  },\n);\n","import React, { useState, useEffect } from 'react';\nimport { sendQuerry } from './api';\nimport { CommentsContext } from './CommentsContext';\nimport { NewComment } from './components/NewComment';\nimport { CommentList } from './components/CommentList';\nimport './App.scss';\n\nconst App = () => {\n  const [pagesAmount, setPagesAmount] = useState(1);\n  const [currentCommentList, setCurrentCommentList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const getData = (pageNumber = 1) => {\n    sendQuerry({}, pageNumber)\n      .then(({ data, last_page, current_page }) => {\n        setCurrentPage(current_page);\n        setCurrentCommentList([...data]);\n        setPagesAmount(last_page);\n      });\n  };\n\n  const updateData = () => {\n    getData(currentPage);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Comments</h1>\n\n      <CommentsContext.Provider\n        value={{\n          updateData,\n          pagesAmount,\n          currentCommentList,\n          currentPage,\n          getData,\n        }}\n      >\n        <NewComment />\n\n        <CommentList />\n      </CommentsContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}